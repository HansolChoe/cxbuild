name: Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - run: mkdir ${{github.workspace}}/bin
    - name: cstrace build prepare
      run: cmake -B ${{github.workspace}}/build -DCMAKE_INSTALL_PREFIX=${{github.workspace}}
      
    - name: cstrace build
      run: cmake --build ${{github.workspace}}/build

    - name: cxbuild build
      uses: JackMcKew/pyinstaller-action-linux@0.1.4
      with: 
        spec: build.spec
    
    - run: chmod +x ${{github.workspace}}/dist/linux/cxbuild
    - run: cp ${{github.workspace}}/dist/linux/cxbuild ${{github.workspace}}/bin/cxbuild
    
    - name: Zip
      uses: papeloto/action-zip@v1
      with:
        files: bin/cstrace bin/cxbuild
        dest: release-cxbuild-${{ runner.os }}-${{ github.sha }}.zip
          
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: Release-cxbuild-${{ runner.os }}-${{ github.sha }}.zip
        tag: ${{ github.ref }}
        overwrite: false
        file_glob: false
        release_name: Release-cxbuild-${{ runner.os }}-${{ github.sha }}
    
